//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by AbstractChoiceSerializationGenerator for DateAndDateTime2Choice.  ISO2002 ID# _fGuzgZlhEeeE1Ya-LgRsuQ.
// Copyright 2024 Jeff Ward, Beneficial Strategies. Usage subject to license of enclosing library.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.Serialization.Xml.Writers.Choices.DateAndDateTime2Choice;
using System.Xml;

namespace BeneficialStrategies.Iso20022.Serialization.Xml.Choices
{
    /// <summary>
    /// Performs the XML serialization faithful to ISO20002 standards for <seealso cref="DateAndDateTime2Choice_"/>.
    /// </summary>
    public class DateAndDateTime2ChoiceXmlAsyncWriter : ISubordinateXmlAsyncWriter<DateAndDateTime2Choice_>
    {
        private readonly DateAndDateTime2ChoiceDateXmlAsyncWriter date;
        private readonly DateAndDateTime2ChoiceDateTimeXmlAsyncWriter dateTime;
        
        /// <summary>
        /// Construct using an injected writer for each member.
        /// </summary>
        public DateAndDateTime2ChoiceXmlAsyncWriter
        (
            DateAndDateTime2ChoiceDateXmlAsyncWriter date,
            DateAndDateTime2ChoiceDateTimeXmlAsyncWriter dateTime
        )
        {
            this.date = date;
            this.dateTime = dateTime;
        }
        public Task WriteAsync(XmlWriter writer, DateAndDateTime2Choice_ valueBeingSerialized, string isoNamespace)
        {
            return valueBeingSerialized switch
            {
                BeneficialStrategies.Iso20022.Choices.DateAndDateTime2Choice.Date _date => this.date.WriteAsync( writer, _date, isoNamespace ),
                BeneficialStrategies.Iso20022.Choices.DateAndDateTime2Choice.DateTime _dateTime => this.dateTime.WriteAsync( writer, _dateTime, isoNamespace ),
                _ => throw new InvalidCastException( $"Data type of {valueBeingSerialized.GetType().FullName} has no corresponding serializer.")
            };
        }
    }
}
