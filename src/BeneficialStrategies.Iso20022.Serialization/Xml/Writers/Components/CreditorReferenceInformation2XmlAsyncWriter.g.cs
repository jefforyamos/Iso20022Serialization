//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentSerializationGenerator for CreditorReferenceInformation2.  ISO2002 ID# _T3_jR9p-Ed-ak6NoX_4Aeg_252475969.
// Copyright 2024 Jeff Ward, Beneficial Strategies. Usage subject to license of enclosing library.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.Codesets;
using BeneficialStrategies.Iso20022.Components;
using BeneficialStrategies.Iso20022.Serialization.Xml.Writers.SimpleTypes;
using System.Xml;

namespace BeneficialStrategies.Iso20022.Serialization.Xml.Writers.Components
{
    /// <summary>
    /// Performs the XML serialization faithful to ISO20002 standards for <seealso cref="CreditorReferenceInformation2"/>.
    /// </summary>
    public class CreditorReferenceInformation2XmlAsyncWriter
    ( // primary constructor 
        ISubordinateXmlAsyncWriter<CreditorReferenceType2> type,
        IMax35TextXmlAsyncWriter reference
    ) // end primary constructor
            : ISubordinateXmlAsyncWriter<CreditorReferenceInformation2>
    {
        public async Task WriteAsync(XmlWriter writer, CreditorReferenceInformation2 value, string isoNamespace)
        {
            // Type Optional CreditorReferenceType2 CreditorReferenceType2
            if ( value.Type is CreditorReferenceType2 populatedType)
            {
                await writer.WriteStartElementAsync(null, "Tp", isoNamespace );
                await type.WriteAsync(writer, populatedType, isoNamespace);
                await writer.WriteEndElementAsync();
            }
            // Reference Optional Max35Text System.String
            if ( value.Reference is System.String populatedReference)
            {
                await writer.WriteStartElementAsync(null, "Ref", isoNamespace );
                await reference.WriteAsync(writer, populatedReference, isoNamespace);
                await writer.WriteEndElementAsync();
            }
        }
    }
}
