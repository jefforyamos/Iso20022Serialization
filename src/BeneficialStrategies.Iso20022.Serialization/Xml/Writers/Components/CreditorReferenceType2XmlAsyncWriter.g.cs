//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by ComponentSerializationGenerator for CreditorReferenceType2.  ISO2002 ID# _T4ItMtp-Ed-ak6NoX_4Aeg_604337645.
// Copyright 2024 Jeff Ward, Beneficial Strategies. Usage subject to license of enclosing library.
//

using BeneficialStrategies.Iso20022.Choices;
using BeneficialStrategies.Iso20022.Codesets;
using BeneficialStrategies.Iso20022.Components;
using BeneficialStrategies.Iso20022.Serialization.Xml.Writers.SimpleTypes;
using System.Xml;

namespace BeneficialStrategies.Iso20022.Serialization.Xml.Writers.Components
{
    /// <summary>
    /// Performs the XML serialization faithful to ISO20002 standards for <seealso cref="CreditorReferenceType2"/>.
    /// </summary>
    public class CreditorReferenceType2XmlAsyncWriter
    ( // primary constructor 
        ISubordinateXmlAsyncWriter<CreditorReferenceType1Choice_> codeOrProprietary,
        IMax35TextXmlAsyncWriter issuer
    ) // end primary constructor
            : ISubordinateXmlAsyncWriter<CreditorReferenceType2>
    {
        public async Task WriteAsync(XmlWriter writer, CreditorReferenceType2 value, string isoNamespace)
        {
            // CodeOrProprietary Required CreditorReferenceType1Choice CreditorReferenceType1Choice_
            await writer.WriteStartElementAsync(null, "CdOrPrtry", isoNamespace );
            await codeOrProprietary.WriteAsync(writer, value.CodeOrProprietary, isoNamespace);
            await writer.WriteEndElementAsync();
            // Issuer Optional Max35Text System.String
            if ( value.Issuer is System.String populatedIssuer)
            {
                await writer.WriteStartElementAsync(null, "Issr", isoNamespace );
                await issuer.WriteAsync(writer, populatedIssuer, isoNamespace);
                await writer.WriteEndElementAsync();
            }
        }
    }
}
