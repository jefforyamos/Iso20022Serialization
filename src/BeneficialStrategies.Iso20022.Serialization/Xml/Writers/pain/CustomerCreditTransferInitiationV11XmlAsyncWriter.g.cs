//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by MainComponentSerializerGenerator for CustomerCreditTransferInitiationV11.  ISO2002 ID# _rUXmwdcBEeq_l4BJLVUF2Q.
// Copyright 2024 Jeff Ward, Beneficial Strategies. Usage subject to license of enclosing library.
//

using BeneficialStrategies.Iso20022.Components;
using BeneficialStrategies.Iso20022.pain;
using System.Xml;

namespace BeneficialStrategies.Iso20022.Serialization.Xml.Writers.pain
{
    /// <summary>
    /// Performs the XML serialization faithful to ISO20002 standards for <seealso cref="CustomerCreditTransferInitiationV11"/>.
    /// </summary>
    public class CustomerCreditTransferInitiationV11XmlAsyncWriter : ContainerXmlAsyncWriter<CustomerCreditTransferInitiationV11>
            , ISubordinateXmlAsyncWriter<CustomerCreditTransferInitiationV11>
            , IXmlAsyncWriter<CustomerCreditTransferInitiationV11>
    {
        public CustomerCreditTransferInitiationV11XmlAsyncWriter(
            
            // Injected dependencies
            
            ISubordinateXmlAsyncWriter<GroupHeader95> groupHeader,
            ISubordinateXmlAsyncWriter<PaymentInstruction40> paymentInformation,
            ISubordinateXmlAsyncWriter<SupplementaryData1> supplementaryData
        )
        : base (
            
            // Initalizing constituent members
            
                new MemberXmlAsyncWriter<CustomerCreditTransferInitiationV11,GroupHeader95>
                (
                    "GrpHdr",
                    groupHeader,
                    parent => parent.GroupHeader
                ),
                
                new MemberXmlAsyncWriter<CustomerCreditTransferInitiationV11,PaymentInstruction40>
                (
                    "PmtInf",
                    paymentInformation,
                    parent => parent.PaymentInformation
                ),
                
                new MemberXmlAsyncWriter<CustomerCreditTransferInitiationV11,SupplementaryData1>
                (
                    "SplmtryData",
                    supplementaryData,
                    parent => parent.SupplementaryData
                )
                
        )
        {
            // Constructor logic in base class
        }
        
        /// <summary>
        /// Writes the specified <seealso cref="CustomerCreditTransferInitiationV11"/> message in ISO20022 compliant format.
        /// Uses the conventions specified in constants in the message itself.
        /// </summary>
        /// <param name="writer">Xml writer to write to. Must have async enabled.</param>
        /// <param name="message">The message with the contents to be serialized.</param>
        /// <returns>The async task that writes the message.</returns>
        public async Task WriteAsync( XmlWriter writer, CustomerCreditTransferInitiationV11 message )
        {
            await writer.WriteStartElementAsync( null, 
                CustomerCreditTransferInitiationV11.DocumentElementName,
                CustomerCreditTransferInitiationV11.DocumentNamespace);
            await writer.WriteStartElementAsync( null, CustomerCreditTransferInitiationV11.XmlTag, CustomerCreditTransferInitiationV11.DocumentNamespace );
            await this.WriteAsync(writer, message, CustomerCreditTransferInitiationV11.DocumentNamespace); // Use subordinate interface to write contents
            await writer.WriteEndElementAsync(); // end of message
            await writer.WriteEndElementAsync(); // end of document
        }
    }
}
