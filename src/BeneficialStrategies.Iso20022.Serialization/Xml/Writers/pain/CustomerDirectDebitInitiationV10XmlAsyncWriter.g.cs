//
// GENERATED CODE, DO NOT EDIT THIS FILE!
//
// Generated by MainComponentSerializerGenerator for CustomerDirectDebitInitiationV10.  ISO2002 ID# _rUYN0dcBEeq_l4BJLVUF2Q.
// Copyright 2024 Jeff Ward, Beneficial Strategies. Usage subject to license of enclosing library.
//

using BeneficialStrategies.Iso20022.Components;
using BeneficialStrategies.Iso20022.pain;
using System.Xml;

namespace BeneficialStrategies.Iso20022.Serialization.Xml.Writers.pain
{
    /// <summary>
    /// Performs the XML serialization faithful to ISO20002 standards for <seealso cref="CustomerDirectDebitInitiationV10"/>.
    /// </summary>
    public class CustomerDirectDebitInitiationV10XmlAsyncWriter : ISubordinateXmlAsyncWriter<CustomerDirectDebitInitiationV10>
            , IXmlAsyncWriter<CustomerDirectDebitInitiationV10>
    {
        // Injected dependencies for serialization of each member data type
        private readonly ISubordinateXmlAsyncWriter<GroupHeader83> groupHeader;
        private readonly ISubordinateXmlAsyncWriter<PaymentInstruction39> paymentInformation;
        private readonly ISubordinateXmlAsyncWriter<SupplementaryData1> supplementaryData;
        public CustomerDirectDebitInitiationV10XmlAsyncWriter(
                ISubordinateXmlAsyncWriter<GroupHeader83> groupHeader,
                ISubordinateXmlAsyncWriter<PaymentInstruction39> paymentInformation,
                ISubordinateXmlAsyncWriter<SupplementaryData1> supplementaryData
        )
        {
            this.groupHeader = groupHeader;
            this.paymentInformation = paymentInformation;
            this.supplementaryData = supplementaryData;
        }
        public async Task WriteAsync(XmlWriter writer, CustomerDirectDebitInitiationV10 valueBeingSerialized, string isoNamespace)
        {
            // GroupHeader Required GroupHeader83 GroupHeader83
            await writer.WriteStartElementAsync(null, "GrpHdr", isoNamespace );
            await groupHeader.WriteAsync(writer, valueBeingSerialized.GroupHeader, isoNamespace);
            await writer.WriteEndElementAsync();
            // PaymentInformation Required PaymentInstruction39 PaymentInstruction39
            await writer.WriteStartElementAsync(null, "PmtInf", isoNamespace );
            await paymentInformation.WriteAsync(writer, valueBeingSerialized.PaymentInformation, isoNamespace);
            await writer.WriteEndElementAsync();
            // SupplementaryData Optional SupplementaryData1 SupplementaryData1
            if ( valueBeingSerialized.SupplementaryData is SupplementaryData1 populatedSupplementaryData)
            {
                await writer.WriteStartElementAsync(null, "SplmtryData", isoNamespace );
                await supplementaryData.WriteAsync(writer, populatedSupplementaryData, isoNamespace);
                await writer.WriteEndElementAsync();
            }
        }
        
        /// <summary>
        /// Writes the specified <seealso cref="CustomerDirectDebitInitiationV10"/> message in ISO20022 compliant format.
        /// Uses the conventions specified in constants in the message itself.
        /// </summary>
        /// <param name="writer">Xml writer to write to. Must have async enabled.</param>
        /// <param name="message">The message with the contents to be serialized.</param>
        /// <returns>The async task that writes the message.</returns>
        public async Task WriteAsync( XmlWriter writer, CustomerDirectDebitInitiationV10 message )
        {
            await writer.WriteStartElementAsync( null, 
                CustomerDirectDebitInitiationV10.DocumentElementName,
                CustomerDirectDebitInitiationV10.DocumentNamespace);
            await writer.WriteStartElementAsync( null, CustomerDirectDebitInitiationV10.XmlTag, CustomerDirectDebitInitiationV10.DocumentNamespace );
            await this.WriteAsync(writer, message, CustomerDirectDebitInitiationV10.DocumentNamespace); // Use subordinate interface to write contents
            await writer.WriteEndElementAsync(); // end of message
            await writer.WriteEndElementAsync(); // end of document
        }
    }
}
